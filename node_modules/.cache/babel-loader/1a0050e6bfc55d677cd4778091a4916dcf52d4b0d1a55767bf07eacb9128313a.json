{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect } from \"vue\";\nconst _hoisted_1 = {\n  class: \"book-search\"\n};\nconst _hoisted_2 = {\n  class: \"search-controls\"\n};\nconst _hoisted_3 = {\n  class: \"filters-container\"\n};\nconst _hoisted_4 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Поле поиска \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"Поиск по названию или автору\",\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.handleSearch && $options.handleSearch(...args)),\n    class: \"search-input\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createCommentVNode(\" Контейнер для фильтров \"), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Выбор жанра \"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedGenre = $event),\n    onChange: _cache[3] || (_cache[3] = (...args) => $options.handleGenreChange && $options.handleGenreChange(...args)),\n    class: \"genre-select\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.genres, genre => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: genre,\n      value: genre\n    }, _toDisplayString(genre), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedGenre]]), _createCommentVNode(\" Выбор сортировки (теперь справа) \"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.sortBy = $event),\n    onChange: _cache[5] || (_cache[5] = (...args) => $options.handleSortChange && $options.handleSortChange(...args)),\n    class: \"sort-select\"\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"option\", {\n    value: \"title\"\n  }, \"По названию\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"author\"\n  }, \"По автору\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"year\"\n  }, \"По году\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"rating\"\n  }, \"По рейтингу\", -1 /* HOISTED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.sortBy]])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","$data","searchQuery","$event","type","placeholder","onInput","_cache","args","$options","handleSearch","_hoisted_3","selectedGenre","onChange","handleGenreChange","_Fragment","_renderList","genres","genre","key","value","_hoisted_4","sortBy","handleSortChange"],"sources":["F:\\Pr\\Frontend\\online-library\\src\\components\\BookSearch.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-search\">\r\n    <div class=\"search-controls\">\r\n      <!-- Поле поиска -->\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"Поиск по названию или автору\"\r\n        @input=\"handleSearch\"\r\n        class=\"search-input\"\r\n      >\r\n      \r\n      <!-- Контейнер для фильтров -->\r\n      <div class=\"filters-container\">\r\n        <!-- Выбор жанра -->\r\n        <select \r\n          v-model=\"selectedGenre\" \r\n          @change=\"handleGenreChange\"\r\n          class=\"genre-select\"\r\n        >\r\n          <option v-for=\"genre in genres\" :key=\"genre\" :value=\"genre\">\r\n            {{ genre }}\r\n          </option>\r\n        </select>\r\n        \r\n        <!-- Выбор сортировки (теперь справа) -->\r\n        <select \r\n          v-model=\"sortBy\" \r\n          @change=\"handleSortChange\"\r\n          class=\"sort-select\"\r\n        >\r\n          <option value=\"title\">По названию</option>\r\n          <option value=\"author\">По автору</option>\r\n          <option value=\"year\">По году</option>\r\n          <option value=\"rating\">По рейтингу</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport store from '../store'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      selectedGenre: 'все',\r\n      sortBy: 'title',\r\n      genres: store.getGenres()\r\n    }\r\n  },\r\n  methods: {\r\n    handleSearch() {\r\n      this.$emit('search', this.searchQuery)\r\n    },\r\n    handleGenreChange() {\r\n      this.$emit('genre-change', this.selectedGenre)\r\n    },\r\n    handleSortChange() {\r\n      this.$emit('sort-change', this.sortBy)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.book-search {\r\n  margin: 20px 0;\r\n}\r\n\r\n.search-controls {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\n.filters-container {\r\n  display: flex;\r\n  gap: 15px;\r\n}\r\n\r\n.genre-select,\r\n.sort-select {\r\n  flex: 1;\r\n  padding: 10px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  background-color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Адаптация для мобильных */\r\n@media (max-width: 768px) {\r\n  .filters-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .genre-select,\r\n  .sort-select {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EACjBA,KAAK,EAAC;AAAiB;;EAWrBA,KAAK,EAAC;AAAmB;;;uBAZlCC,mBAAA,CAqCM,OArCNC,UAqCM,GApCJC,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCJC,mBAAA,iBAAoB,E,gBACpBF,mBAAA,CAMC;+DALUG,KAAA,CAAAC,WAAW,GAAAC,MAAA;IACpBC,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,8BAA8B;IACzCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IACpBb,KAAK,EAAC;iEAJGM,KAAA,CAAAC,WAAW,E,GAOtBF,mBAAA,4BAA+B,EAC/BF,mBAAA,CAuBM,OAvBNa,UAuBM,GAtBJX,mBAAA,iBAAoB,E,gBACpBF,mBAAA,CAQS;+DAPEG,KAAA,CAAAW,aAAa,GAAAT,MAAA;IACrBU,QAAM,EAAAN,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAK,iBAAA,IAAAL,QAAA,CAAAK,iBAAA,IAAAN,IAAA,CAAiB;IAC1Bb,KAAK,EAAC;yBAENC,mBAAA,CAESmB,SAAA,QAAAC,WAAA,CAFef,KAAA,CAAAgB,MAAM,EAAfC,KAAK;yBAApBtB,mBAAA,CAES;MAFwBuB,GAAG,EAAED,KAAK;MAAGE,KAAK,EAAEF;wBAChDA,KAAK,wBAAAG,UAAA;2FALDpB,KAAA,CAAAW,aAAa,E,GASxBZ,mBAAA,sCAAyC,E,gBACzCF,mBAAA,CASS;+DAREG,KAAA,CAAAqB,MAAM,GAAAnB,MAAA;IACdU,QAAM,EAAAN,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAc,gBAAA,IAAAd,QAAA,CAAAc,gBAAA,IAAAf,IAAA,CAAgB;IACzBb,KAAK,EAAC;gCAENG,mBAAA,CAA0C;IAAlCsB,KAAK,EAAC;EAAO,GAAC,aAAW,qBACjCtB,mBAAA,CAAyC;IAAjCsB,KAAK,EAAC;EAAQ,GAAC,WAAS,qBAChCtB,mBAAA,CAAqC;IAA7BsB,KAAK,EAAC;EAAM,GAAC,SAAO,qBAC5BtB,mBAAA,CAA2C;IAAnCsB,KAAK,EAAC;EAAQ,GAAC,aAAW,oB,2DAPzBnB,KAAA,CAAAqB,MAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}